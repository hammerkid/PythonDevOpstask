- hosts: loadbalancer
  become_user: root
  remote_user: ubuntu
  become: true


  tasks:
    - name: Install the package "nginx"
      apt:
        name: nginx #for pip add locale command export LC_ALL=C
        state: present


- hosts: db
  become_user: root
  remote_user: ubuntu
  become: true


  tasks:
    - name: Download Percona package
      get_url:
        url: https://repo.percona.com/apt/percona-release_0.1-4.xenial_all.deb
        dest: /home/ubuntu/


    - name: Run dpkg 
      dpkg_selections:
        name: percona-release_0.1-4.xenial_all.deb
        selection: install
    
    - name: Run apt-get update
      apt:
         update_cache: yes


    - name: Install Percona package
      apt:
         name: percona-server-server-5.7
         update_cache: yes

    - name: Start db service
      service:
        name: mysql
        state: started

    - name: Install python-mysqldb
      apt:
         name: python-mysqldb
         update_cache: yes

    - name: Create user
      mysql_user:
        name: user
        host: 192.168.33.11
        password: password
        priv: '*.*:ALL,GRANT'
        state: present

    - mysql_user:
        name: user
        host: 192.168.33.12
        password: password
        priv: '*.*:ALL,GRANT'
        state: present

    - name: Create a new database with name 'test'
      mysql_db:
        name: test
        state: present


    - name: Copy database template file
      copy:
        src: sql_template.sql
        dest: /tmp
    
    - name: Create database
      mysql_db:
        name: test
        state: import
        target: /tmp/sql_template.sql


- hosts: app2
  become_user: root
  remote_user: ubuntu
  become: true

  tasks:
    
    - name: Run apt-get update
      apt:
         update_cache: yes

    - name: Install list of packages
      apt: name={{item}} state=installed
      with_items:
           - build-essential
           - python-dev
           - python-mysqldb

    - name: Install uwsgi
      pip:
         name: uwsgi
         extra_args: -I --no-cache-dir

    - name: Copy app from git
      git:
         repo: 'https://github.com/hammerkid/dev_ops_test.git'
         dest: /home/ubuntu/app
         version: app


#    - name: Run uwsgi socket #check how to runs ot 2 servs same time
#      command: uwsgi --socket :8000 --protocol=http -w wsgi
#         chdir: /home/ubuntu/app/flaskapp


#    - name: Create dev-ops-app.service
#      command: cp /home/ubuntu/app/flaskapp/dev-ops-app.service /etc/systemd/system/
      
#    - name: Start dev-ops-app service
#      systemd: name=dev-ops-app state=starte

#    - name: Create dev-ops-app.service
#      command: systemctl daemon-reload





